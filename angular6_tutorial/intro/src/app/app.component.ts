import { Component } from '@angular/core';

// 
// member decorator
//
// function log(target, name, descriptor) {
//   console.log(target, name, descriptor);
//   // store the original function in a variable
//   const original = descriptor.value;

//   // do some manipulations with descriptor.value
// //  original();

//   descriptor.value = function(...args) {
//     console.log('Arguments ', args, " were passed to this function ");
//     const result = original.apply(this, args);
//     console.log('The result of this function is ', result);
//     return result;

//   }

//   // return the descriptor
//   return descriptor;
// }

// 
// class decorator
//
function logClass(className) {
  console.log(className);
  return (...args) => {
    console.log('Arguments passed to this class\'s constructor are ', args);
    return new className(...args);
  }
}

@logClass
class myExampleClass {
  constructor(arg1:number, arg2:number) {
    console.log('Constructor fired!');
  }
}

const myClass = new myExampleClass(5, 10);


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'app';

  constructor() {
    console.log('This statement was generated by the constructor', this.aSimpleMethod(5, 2));
  }

  // @log
  aSimpleMethod(a, b) {
    return a*b;
  }
}
